<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android | If you see it]]></title>
  <link href="http://lynnequ.github.com/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://lynnequ.github.com/"/>
  <updated>2013-11-12T20:09:44-08:00</updated>
  <id>http://lynnequ.github.com/</id>
  <author>
    <name><![CDATA[Lynne Qu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Sqlite3 with Android]]></title>
    <link href="http://lynnequ.github.com/blog/2013/08/05/sqlite3-with-android/"/>
    <updated>2013-08-05T23:20:00-07:00</updated>
    <id>http://lynnequ.github.com/blog/2013/08/05/sqlite3-with-android</id>
    <content type="html"><![CDATA[<p>Prerequisite: <a href="http://ifyouseeit.org/blog/2013/03/21/android-app-with-google-map-api-v2-tutorial/">set up <code>adb</code> command</a></p>

<p>{% codeblock %}</p>

<p>$ adb devices ## I have one real device and one emulator<br/>
List of devices attached<br/>
xxxxxxxxxxxx    device<br/>
emulator-5554   device</p>

<p>$ adb -s emulator-5554 shell ## To access specific device's shell and then use sqlite3 command
root@android:/ # sqlite3
SQLite version 3.7.11 2012-03-20 11:35:50
Enter ".help" for instructions
Enter SQL statements terminated with a ";"
sqlite></p>

<p>$ adb -s emulator-5554  pull /system/xbin/sqlite3
4005 KB/s (67880 bytes in 0.016s)
s
$ adb -s 015d28569058200a push sqlite3 /system/xbin/
failed to copy 'sqlite3' to '/system/xbin//sqlite3': Read-only file system
{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Map on Android with Play Service 7]]></title>
    <link href="http://lynnequ.github.com/blog/2013/07/13/google-map-on-android-with-play-service-7/"/>
    <updated>2013-07-13T15:57:00-07:00</updated>
    <id>http://lynnequ.github.com/blog/2013/07/13/google-map-on-android-with-play-service-7</id>
    <content type="html"><![CDATA[<p>Our side project: <a href="https://github.com/CapeDev/TrakeMoi">TrakéMoi</a></p>

<p>The previous blog post solved some basic problems you may have:
<a href="http://ifyouseeit.org/blog/2013/03/21/android-app-with-google-map-api-v2-tutorial">Android App With Google Map API V2</a></p>

<h3>Google Play Service 7 installation/upgrade</h3>

<h5>Option 1</h5>

<p>You can either run <code>$ android sdk</code>, select to install your Google Play Service, also api 16, for some reasons, you may need this to support the play 7.<br/>
<img src="http://i.imgur.com/00JPaMB.png" alt="alt text" /></p>

<h5>Option 2</h5>

<p>{% codeblock %}</p>

<p>$ android update sdk --no-ui --force --filter platform-tools,extra-android-support,android-17,sysimg-17,extra-google-google_play_services</p>

<p>$ android update sdk --no-ui --force --filter android-16</p>

<p>{% endcodeblock %}</p>

<h3>GMS-MVN help setup</h3>

<p>Add the <a href="https://github.com/JakeWharton/gms-mvn-install">gms-mvn</a> as your git submodule.</p>

<p>{% codeblock .gitmodules %}<br/>
[submodule "vendor/gms-mvn"]</p>

<pre><code>path = vendor/gms-mvn
url = git://github.com/JakeWharton/gms-mvn-install.git
</code></pre>

<p>{% endcodeblock%}</p>

<p>And automate the installation.</p>

<p>{% codeblock setup.sh %}</p>

<p>export PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/build-tools</p>

<p>git submodule init
git submodule update</p>

<p>git submodule foreach git pull origin master</p>

<p>cp vendor/gms-mvn/gms-mvn-install.sh ${ANDROID_HOME}/extras/google/google_play_services/libproject/google-play-services_lib/ <br/>
(cd ${ANDROID_HOME}/extras/google/google_play_services/libproject/google-play-services_lib/ &amp;&amp; ./gms-mvn-install.sh 7)</p>

<p>{% endcodeblock%}</p>

<h3>Update pom.xml</h3>

<p>Add Google Play Service 7 to pom, also update the android-maven-plugin to 3.6.0.</p>

<p>{% codeblock pom.xml partially %}<br/>
<dependency></p>

<pre><code>&lt;groupId&gt;com.google.android.gms&lt;/groupId&gt;
&lt;artifactId&gt;google-play-services&lt;/artifactId&gt;
&lt;version&gt;7&lt;/version&gt;
&lt;type&gt;apklib&lt;/type&gt;
</code></pre>

<p></dependency></p>

<p><groupId>com.jayway.maven.plugins.android.generation2</groupId>                <br/>
<artifactId>android-maven-plugin</artifactId>
<version>3.6.0</version></p>

<p>{% endcodeblock%}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android: ListView]]></title>
    <link href="http://lynnequ.github.com/blog/2013/07/02/android-listview/"/>
    <updated>2013-07-02T22:03:00-07:00</updated>
    <id>http://lynnequ.github.com/blog/2013/07/02/android-listview</id>
    <content type="html"><![CDATA[<p><a href="https://travis-ci.org/CapeDev/TrakeMoi" target="_blank">
<img border="0" src="https://api.travis-ci.org/CapeDev/TrakeMoi.png" ></a></p>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android app with Google Map API v2]]></title>
    <link href="http://lynnequ.github.com/blog/2013/03/21/android-app-with-google-map-api-v2-tutorial/"/>
    <updated>2013-03-21T03:09:00-07:00</updated>
    <id>http://lynnequ.github.com/blog/2013/03/21/android-app-with-google-map-api-v2-tutorial</id>
    <content type="html"><![CDATA[<h3>1. Get logistic things out of your way</h3>

<p>I assume you have your <a href="http://developer.android.com/sdk/index.html">Google Android SDK</a> downloaded.</p>

<p>Setting up these in .bash_profile to enable you using command like <code>adb</code> and <code>emulator</code>.</p>

<p>{% codeblock %}</p>

<p>export ANDROID_HOME='/path/to/adt-bundle-mac-x86_64/sdk'
export PATH=${PATH}:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/tools</p>

<p>{% endcodeblock %}</p>

<h4>Build your environment</h4>

<p>Running your Android SDK Manager from your teminal:</p>

<p>{% codeblock %}
android sdk
{% endcodeblock %}</p>

<p>Select Android 4.2.2 (API 17), Google Play Services under extra(scroll down to the bottom)
<img src="http://i.imgur.com/3ONXSei.png" alt="alt text" />
<img src="http://i.imgur.com/Xiq4CR3.png" alt="alt text" /></p>

<p>Install the packages, it will probably take a while… Coffee?</p>

<p>More details about: <a href="http://developer.android.com/tools/devices/managing-avds-cmdline.html" title="More infor form Google site">Managing avds from command line</a></p>

<h5>Create Device Emulator from your command and start your emulator</h5>

<p>{% codeblock %}</p>

<p>echo no  | android create avd -n BiteMoi -t android-17 --skin WVGA800 --force --abi armeabi-v7a<br/>
emulator -avd BiteMoi -partition-size 512 -no-audio -no-boot-anim</p>

<p>{% endcodeblock %}</p>

<p><strong>Updated</strong>
You can create your Virtual Device as follows.<br/>
Run <code>android sdk</code></p>

<p>Choose "Manage AVDs…" like this:</p>

<p><img src="http://i.imgur.com/eijceI6.png" alt="alt text" /></p>

<p>Create AVD.</p>

<p><img src="http://i.imgur.com/I80RAv0.png" alt="alt text" /></p>

<p>Click OK.</p>

<p><strong>Debuging notes</strong></p>

<p><strong>Installation and uninstall by apk or package name</strong>
{% codeblock %}<br/>
adb install target/bitemoi-1.0.apk  # Install and uninstall apk through adb<br/>
adb uninstall com.thoughtworks.bitemoi # Unistall by given package name<br/>
{% endcodeblock %}</p>

<p><strong>Logcat</strong><br/>
{% codeblock %}
adb logcat -c   # Clean logcat log
adb logcat  # Start monitoring logcat, live version <br/>
{% endcodeblock %}</p>

<h6>References</h6>

<p><a href="http://developer.android.com/tools/help/adb.html">Command line help from Google SDK</a></p>

<hr />

<h3>2. Build your app</h3>

<p><strong>Create new Android Application</strong></p>

<p><img src="http://i.imgur.com/cJap8Qc.png" alt="alt text" /></p>

<p><img src="http://i.imgur.com/kCoo5eE.png" alt="alt text" /></p>

<p>Next if you don't have anything else to modify.</p>

<p><img src="http://i.imgur.com/lz1eC92.png" alt="alt text" /></p>

<p><strong>AndroidManifest.xml</strong></p>

<p>{% codeblock AndroidManifest.xml %}<br/>
&lt;?xml version="1.0" encoding="utf-8"?>
&lt;manifest xmlns:android="http://schemas.android.com/apk/res/android"</p>

<pre><code>package="com.thoughtworks.bitemoi"
android:versionCode="1"
android:versionName="1.0" &gt;

&lt;uses-sdk
    android:minSdkVersion="15"
    android:targetSdkVersion="17" /&gt;

&lt;uses-permission android:name="android.permission.INTERNET" /&gt;
&lt;uses-permission android:name="com.thoughtworks.bitemoi.permission.MAPS_RECEIVE" /&gt;
&lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /&gt;
&lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /&gt;
&lt;uses-permission android:name="com.google.android.providers.gsf.permission.READ_GSERVICES" /&gt;
&lt;!--
 The following two permissions are not required to use
 Google Maps Android API v2, but are recommended.
--&gt;
&lt;uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" /&gt;
&lt;uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" /&gt;

&lt;permission
    android:name="com.thoughtworks.bitemoi.permission.MAPS_RECEIVE"
    android:protectionLevel="signature" /&gt;

&lt;uses-feature
    android:glEsVersion="0x00020000"
    android:required="true" /&gt;

&lt;application
    android:allowBackup="true"
    android:icon="@drawable/ic_launcher"
    android:label="@string/app_name"
    android:theme="@style/AppTheme" &gt;
    &lt;activity
        android:name="com.thoughtworks.bitemoi.MapActivity"
        android:label="@string/app_name" &gt;
        &lt;intent-filter&gt;
            &lt;action android:name="android.intent.action.MAIN" /&gt;

            &lt;category android:name="android.intent.category.LAUNCHER" /&gt;
        &lt;/intent-filter&gt;
    &lt;/activity&gt;

    &lt;meta-data
        android:name="com.google.android.maps.v2.API_KEY"
        android:value="YOU_GOOGLE_ANDROID_MAP_API_KEY" /&gt;
&lt;/application&gt;
</code></pre>

<p></manifest></p>

<p>{% endcodeblock %}</p>

<h5>Generate your Google Android Map API Key</h5>

<p>Find your Google API Console, under left sidebar "Services", choose the Google Maps Android API v2. Like the following picture shows. This is <strong>important</strong>.</p>

<p><img src="http://i.imgur.com/mGCG23z.png" alt="alt text" /></p>

<p>Then under "API Access", choose "Create new Android key…" button. You can follow the instruction there and paste your <strong>SHA-1</strong> along with your <strong>package name</strong> there to get a production key, but for debugging purpose, I did the following.</p>

<p>{% codeblock %}
cd ~/.android <br/>
$ keytool -list -v -alias androiddebugkey -keystore debug.keystore \
-storepass android -keypass android # using debug.keystore to discover the SHA-1
{% endcodeblock %}</p>

<p>More read on : <a href="https://developers.google.com/console/help/#generatingdevkeys">Google: generate dev keys</a></p>

<p><strong>API Key</strong><br/>
After you created, you will see a new section under "API Access".
<img src="http://i.imgur.com/w9vi18b.png" alt="alt text" />
Note: this is a debug key for my app, will not work on yours.</p>

<p>Put this key to your AndroidManifest.xml.</p>

<p><strong>Add the map fragment to your layout</strong><br/>
Add this between <code>&lt;RelativeLayout&gt;&lt;/RelativeLayout&gt;</code>, you can preview the fragment in "Graphical Layout" tab.</p>

<p>{% codeblock Layout/activity_map.xml (partial)%}</p>

<pre><code>&lt;fragment
    android:id="@+id/map"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    class="com.google.android.gms.maps.MapFragment" /&gt;
</code></pre>

<p>{% endcodeblock %}</p>

<p><strong>Add Google Play Service Support</strong></p>

<p>File -> Import -> Android -> Existing Android->Find the following path to Play Service Lib</p>

<p>/{YOUR_PATH_TO_ADK}/adt-bundle-mac-x86_64/sdk/extras/google/google_play_services/libproject/google-play-services_lib</p>

<p><img src="http://i.imgur.com/JE0amaI.png" alt="alt text" />
<img src="http://i.imgur.com/beHg0FI.png" alt="alt text" />
After imported, google-play-service_lib is shown up as a project module.
<img src="http://i.imgur.com/cTgwojN.png" alt="alt text" /></p>

<p>Right click on Your app, here is AndroidGoogleMap, choose properties, add the new lib support we just had.
<img src="http://i.imgur.com/mQEPHID.png" alt="alt text" />
<img src="http://i.imgur.com/54fbp4X.png" alt="alt text" />
<img src="http://i.imgur.com/hc2RHzQ.png" alt="alt text" /></p>

<p><strong>Now we can use Goolge Android Map v2 api to build our app</strong></p>

<p>{% codeblock MapActivity.java %}<br/>
package com.thoughtworks.bitemoi;</p>

<p>import android.os.Bundle;
import android.app.Activity;
import android.view.Menu;</p>

<p>import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.MapFragment;
import com.google.android.gms.maps.UiSettings;</p>

<p>public class MapActivity extends Activity {</p>

<pre><code>private GoogleMap map;
private UiSettings uiSettings;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_map);
    setUpMapIfNeeded();
}

private void setUpMapIfNeeded() {
    if (map == null) {
        map = ((MapFragment) getFragmentManager()
                .findFragmentById(R.id.map)).getMap();
        if (map != null) {
            setUpMap();
        }
    }
}

private void setUpMap() {
    uiSettings = map.getUiSettings();
    map.setMyLocationEnabled(true);
}

@Override
public boolean onCreateOptionsMenu(Menu menu) {
    // Inflate the menu; this adds items to the action bar if it is present.
    getMenuInflater().inflate(R.menu.map, menu);
    return true;
}
</code></pre>

<p>}
{% endcodeblock %}</p>

<p>Build and run your application while your AVD is running.</p>

<p><img src="http://i.imgur.com/ALFLE1D.png" alt="alt text" /></p>

<p>There may be some issues with Google Play Services not found or not updated. Till Apr 09, the hacky way which are intall these two apks works for me.</p>

<p>{% codeblock %}<br/>
$ adb install com.android.vending-1.apk
$ adb install com.google.android.gms-3025110-v3.0.25\ (583950-10).apk
{% endcodeblock %}</p>

<p><strong>Reference <a href="http://www.vogella.com/articles/AndroidGoogleMaps/article.html">Google Maps Android API v2 - Tutorial
</a></strong></p>

<h2>And, more fun with build tool</h2>

<p>This side project which I'm currently working on has maven support build in. Though you still need to create right AVD and install two apks.</p>

<p><a href="https://github.com/CapeDev/BiteMeAndroid">GIT REPO: BiteMeAndroid </a></p>

<p><strong>Requirements:</strong>
Android sdk configured; installed mvn plugins for regular eclipse(see pics below); installed google play services apks dependencies(gms, vending).</p>

<p>{% codeblock steps for making BiteMoi working locally %}</p>

<p>git clone git://github.com/CapeDev/BiteMeAndroid.git
<strong>Very Important</strong>
Visit here : https://github.com/JakeWharton/gms-mvn-install, download the repo, follow the readme instruction, it will eventually added to your .m2/repository/com/google/android/ directory.</p>

<p>(Make sure you have Google-Play-Service-lib rev.5 installed for this project.)</p>

<p>mvn clean install
mvn eclipse:clean eclipse:eclipse
mkdir ../BiteMeAndroidWorkspace (Your new eclipse workspace)
Open regular Eclipse(mine is Juno at the moment), use the directory we just created as your workspace.
Import -> existing maven project (You need maven plugin for Eclipse first, you can install from marketPlace or some other way you can find)
Choose by click "Browse" button, navigate to /BiteMeAndroid (the github repo we just cloned at the beginning) as your "Root Directory"
"Next"-> You should see maven-compiler-plugin:2.5.1:compile; maven-compiler-plugin:2.5.1:testCompile with two green check mark ->"Finish"
Right click on project if there is red cross -> "Maven" -> "Update project…"</p>

<p>-----Create IntelliJ 12 project</p>

<p>mvn clean install idea:clean idea:idea</p>

<hr />

<p>Create device and start it:</p>

<p>echo no  | android create avd -n BiteMoiCMD -t android-17 --skin WVGA800 --force --abi armeabi-v7a</p>

<p>$android sdk
You should see "Android SDK Manager" window pop out, select "Tools" from the top
Select "Manage avds", you should see "Android Virtual Device Manager" window.
Select the device you just created or have
(Click "Edit", in the CPU/ABI area, change to Intel Atom(x86), because it's faster)
Click "Start…" and "Laurch"</p>

<hr />

<p>Troubleshooting, not in order:</p>

<p>propertities -> builders -> uncheck Java Builder</p>

<p>If you see missing gms ish, install two apks from google-apk folder under BiteMoi git-repo by this:
adb install XXX</p>

<p>check Propertities -> Java Build Path -> Source tab -> check target/unpack/apklibs/com.google.android.gms_google-play-services_apklib_5/src</p>

<p>project -> clean, clean and clean!!!</p>

<p>Disable Maven Nature -> mvn eclipse:clean eclipse:eclipse -> add Maven back</p>

<p>-----Install the apk and run</p>

<p>$ adb uninstall com.thoughtworks.bitemoi
$ mvn clean install
$ adb install target/bitemoi-1.0.apk
{% endcodeblock %}</p>

<p>{% codeblock steps for IntelliJ 12 %}
1) git clone git://github.com/CapeDev/BiteMeAndroid.git
2) Open IntelliJ 12 IDE, "File" -> "Import Project" -> "Select File or Firectory to Import" window, navigate to root directory of the git repo we just cloned. -> "OK"
3) Check  radio "Import project from external model" and choose Maven from the list -> "Next"
4) Check "Import Maven projects automatically" -> "Next" to the end…</p>

<p>{% endcodeblock %}</p>

<p>Regarding Eclipse plugin, this is what I have for my Eclipse
<img src="http://i.imgur.com/Q4M3bNq.png" alt="alt text" />
<img src="http://i.imgur.com/MShtWRA.png" alt="alt text" /></p>

<p>Reference for installing Google Play Service:
<a href="https://github.com/JakeWharton/gms-mvn-install">GIT REPO: GMS MVN INSTALL</a></p>

<h2>UPDATE</h2>

<p>Downloaded the newest google android sdk (Jun 25, 2013)</p>

<p>{% codeblock %}
export PATH=${PATH}:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/tools:${ANDROID_HOME}/build-tools</p>

<p>$ ln -sf ../build-tools/android-4.2.2/aapt aapt
$ ln -sf ../build-tools/android-4.2.2/lib lib
$ ln -sf ../build-tools/android-4.2.2/aidl aidl
{% endcodeblock %}</p>
]]></content>
  </entry>
  
</feed>
